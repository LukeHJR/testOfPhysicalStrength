<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.test_physical_strength.mapper.SysTestMapper" >
  <resultMap id="BaseResultMap" type="com.example.test_physical_strength.model.SysTest" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="sys_user_student_id" property="sysUserStudentId" jdbcType="INTEGER" />
    <result column="sys_project_id" property="sysProjectId" jdbcType="INTEGER" />
    <result column="sys_class" property="sysClass" jdbcType="INTEGER" />
    <result column="student_num" property="studentNum" jdbcType="VARCHAR" />
    <result column="advice" property="advice" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="SMALLINT" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="SMALLINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, sys_user_student_id, sys_project_id, sys_class, student_num, advice, type, reason, 
    status, create_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.example.test_physical_strength.model.SysTestExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from sys_test
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
       limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from sys_test
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from sys_test
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.test_physical_strength.model.SysTestExample" >
    delete from sys_test
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.test_physical_strength.model.SysTest" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_test (sys_user_student_id, sys_project_id, sys_class, 
      student_num, advice, type, 
      reason, status, create_time, 
      update_time)
    values (#{sysUserStudentId,jdbcType=INTEGER}, #{sysProjectId,jdbcType=INTEGER}, #{sysClass,jdbcType=INTEGER}, 
      #{studentNum,jdbcType=VARCHAR}, #{advice,jdbcType=VARCHAR}, #{type,jdbcType=SMALLINT}, 
      #{reason,jdbcType=VARCHAR}, #{status,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.example.test_physical_strength.model.SysTest" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_test
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="sysUserStudentId != null" >
        sys_user_student_id,
      </if>
      <if test="sysProjectId != null" >
        sys_project_id,
      </if>
      <if test="sysClass != null" >
        sys_class,
      </if>
      <if test="studentNum != null" >
        student_num,
      </if>
      <if test="advice != null" >
        advice,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="sysUserStudentId != null" >
        #{sysUserStudentId,jdbcType=INTEGER},
      </if>
      <if test="sysProjectId != null" >
        #{sysProjectId,jdbcType=INTEGER},
      </if>
      <if test="sysClass != null" >
        #{sysClass,jdbcType=INTEGER},
      </if>
      <if test="studentNum != null" >
        #{studentNum,jdbcType=VARCHAR},
      </if>
      <if test="advice != null" >
        #{advice,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=SMALLINT},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.test_physical_strength.model.SysTestExample" resultType="java.lang.Integer" >
    select count(*) from sys_test
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_test
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.sysUserStudentId != null" >
        sys_user_student_id = #{record.sysUserStudentId,jdbcType=INTEGER},
      </if>
      <if test="record.sysProjectId != null" >
        sys_project_id = #{record.sysProjectId,jdbcType=INTEGER},
      </if>
      <if test="record.sysClass != null" >
        sys_class = #{record.sysClass,jdbcType=INTEGER},
      </if>
      <if test="record.studentNum != null" >
        student_num = #{record.studentNum,jdbcType=VARCHAR},
      </if>
      <if test="record.advice != null" >
        advice = #{record.advice,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=SMALLINT},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=SMALLINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_test
    set id = #{record.id,jdbcType=INTEGER},
      sys_user_student_id = #{record.sysUserStudentId,jdbcType=INTEGER},
      sys_project_id = #{record.sysProjectId,jdbcType=INTEGER},
      sys_class = #{record.sysClass,jdbcType=INTEGER},
      student_num = #{record.studentNum,jdbcType=VARCHAR},
      advice = #{record.advice,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=SMALLINT},
      reason = #{record.reason,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=SMALLINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.test_physical_strength.model.SysTest" >
    update sys_test
    <set >
      <if test="sysUserStudentId != null" >
        sys_user_student_id = #{sysUserStudentId,jdbcType=INTEGER},
      </if>
      <if test="sysProjectId != null" >
        sys_project_id = #{sysProjectId,jdbcType=INTEGER},
      </if>
      <if test="sysClass != null" >
        sys_class = #{sysClass,jdbcType=INTEGER},
      </if>
      <if test="studentNum != null" >
        student_num = #{studentNum,jdbcType=VARCHAR},
      </if>
      <if test="advice != null" >
        advice = #{advice,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=SMALLINT},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=SMALLINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.test_physical_strength.model.SysTest" >
    update sys_test
    set sys_user_student_id = #{sysUserStudentId,jdbcType=INTEGER},
      sys_project_id = #{sysProjectId,jdbcType=INTEGER},
      sys_class = #{sysClass,jdbcType=INTEGER},
      student_num = #{studentNum,jdbcType=VARCHAR},
      advice = #{advice,jdbcType=VARCHAR},
      type = #{type,jdbcType=SMALLINT},
      reason = #{reason,jdbcType=VARCHAR},
      status = #{status,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>